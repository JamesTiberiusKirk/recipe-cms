package edit

import "github.com/JamesTiberiusKirk/recipe-cms/models"
import "github.com/JamesTiberiusKirk/recipe-cms/site/components"
import "github.com/JamesTiberiusKirk/recipe-cms/common"

type recipePageData struct {
	c               *common.Context
	Recipe          models.Recipe
	Units           []models.Unit
	Error           string
	IsAuthenticated bool
}

css recipePageCSS() {
	width: 80%;
}

const (
	recipeContainerID = "recipe_container"
)

templ recipePage(data recipePageData) {
	@components.Layout(data.c) {
		<div
			id={ recipeContainerID }
			class="w-full"
		>
			<div
				id={ recipeContainerID + "_inner" }
				class="w-full"
			>
				@recipeForm(recipeFormProps{
					Recipe:         data.Recipe,
					AvailableUnits: data.Units,
				})
			</div>
		</div>
	}
}

type recipeFormProps struct {
	Recipe          models.Recipe
	AvailableUnits  []models.Unit
	IsAuthenticated bool
}

const (
	recipeFormID = "recipe_form"
)

templ recipeForm(props recipeFormProps) {
	<div
		class="w-full flex flex-col"
	>
		<form
			id={ recipeFormID }
			name="recipe"
			hx-ext="json-enc-nested"
			hx-trigger="recipe_form_submit from:body"
		>
			<div class="flex flex-row space-between justify-between mb-2">
				<input hidden name="recipe[author_name]" value={ props.Recipe.AuthorName }/>
				@components.Input(components.InputProps{
					Value:       props.Recipe.Name,
					DisplayName: "Name:",
					Name:        []string{"recipe", "name"},
					Type:        components.InputTypeText,
				})
				<button
					class="btn mb-1"
					hx-post={ "/recipe/" + props.Recipe.ID + "/edit?done=true" }
					hx-include={ "#" + recipeFormID }
					hx-select={ "#" + recipeContainerID + "_inner" }
					hx-target={ "#" + recipeContainerID }
					hx-swap="innerHTML"
					hx-push-url="true"
				>
					DONE
				</button>
			</div>
			@components.Tags(components.TagsProps{
				Tags: props.Recipe.Tags,
				Name: []string{"recipe", "tags"},
			})
			<br/>
			@components.TextArea(components.TextAreaProps{
				ID:              "introduction",
				Classes:         templ.Classes(""),
				FormID:          recipeFormID,
				Value:           props.Recipe.Intro,
				Rows:            5,
				DisplayName:     "Intro:",
				Name:            []string{"recipe", "intro"},
				MarkdownPreview: true,
			})
			<br/>
			<br/>
			@components.TextArea(components.TextAreaProps{
				ID:              "description",
				FormID:          recipeFormID,
				Value:           props.Recipe.Description,
				Rows:            5,
				DisplayName:     "Description:",
				Name:            []string{"recipe", "description"},
				MarkdownPreview: true,
			})
			<br/>
			<br/>
			<br/>
			<h2>Ingredients:</h2>
			<div id="ingredients">
				<table class="table-auto">
					<thead>
						<tr class="w-full">
							<th>
								#
							</th>
							<th class="w-1/2">
								Name
							</th>
							<th class="w-1/4">
								Amount	
							</th>
							<th>
								Unit	
							</th>
							<th class="w-1/8">
								X
							</th>
						</tr>
					</thead>
					<tbody id="ingredients_tbl_body" class="mx-auto">
						for idx, ingr := range props.Recipe.Ingredients {
							@components.Ingredient(components.IngredientProps{
								// ID: fmt.Sprintf("ingredient:%d", i),
								Ingredient:     ingr,
								AvailableUnits: props.AvailableUnits,
								FormName:       []string{"recipe", "ingredients", ""},
								Count:          idx + 1,
							})
						}
					</tbody>
				</table>
			</div>
			<br/>
			<button
				hx-post={ "/recipe/" + props.Recipe.ID + "/edit?action=" + ActionAddIngredient }
				hx-swap="outerHTML"
				hx-include={ "#" + recipeFormID }
				hx-target="#ingredients"
				hx-select="#ingredients"
				class="w-full btn bg-red-400 hover:bg-red-500"
			>
				Add ingredient
			</button>
			<br/>
			<br/>
			<br/>
			<h2>Seasonings:</h2>
			<div id="seasonings">
				<table class="table-auto">
					<thead>
						<tr class="w-full">
							<th>
								#
							</th>
							<th class="w-1/2">
								Name
							</th>
							<th class="w-1/4">
								Amount	
							</th>
							<th>
								Unit	
							</th>
							<th class="w-1/8">
								X
							</th>
						</tr>
					</thead>
					<tbody class="mx-auto">
						for idx, ingr := range props.Recipe.Seasonings {
							@components.Ingredient(components.IngredientProps{
								Ingredient:     ingr,
								AvailableUnits: props.AvailableUnits,
								FormName:       []string{"recipe", "seasonings", ""},
								Count:          idx + 1,
							})
						}
					</tbody>
				</table>
			</div>
			<br/>
			<button
				hx-post={ "/recipe/" + props.Recipe.ID + "/edit?action=" + ActionAddSeasoning }
				hx-swap="outerHTML"
				hx-include={ "#" + recipeFormID }
				hx-target="#seasonings"
				hx-select="#seasonings"
				class="w-full btn bg-red-400 hover:bg-red-500"
			>
				Add Seasoning 
			</button>
			<br/>
			<br/>
			@components.TextArea(components.TextAreaProps{
				ID:              "instructions",
				Value:           props.Recipe.Instructions,
				Rows:            10,
				DisplayName:     "Instructions:",
				Name:            []string{"recipe", "instructions"},
				MarkdownPreview: true,
			})
			<br/>
			@components.TextArea(components.TextAreaProps{
				ID:              "closing",
				FormID:          recipeFormID,
				Value:           props.Recipe.Closing,
				Rows:            5,
				DisplayName:     "Closing thoughts:",
				Name:            []string{"recipe", "closing"},
				MarkdownPreview: true,
			})
			<br/>
			<div
				id="images_list"
				class="sortable flex flex-col  border-2 border-white rounded-md"
				hx-get
				hx-trigger="images_update from:body"
				hx-target="#images_list"
				hx-select="#images_list"
				hx-swap="outerHTML"
			>
				for _, image :=range props.Recipe.Images {
					<div class="flex flex-row p-2 border-b border-1 border-white">
						<img src={ image } class="w-1/5"/>
						<input value={ image } name="recipe[images][]" type="hidden"/>
						<a class="p-6 my-auto w-1/5">{ image }</a>
						<button
							class="ml-auto p-4"
							_={ "on click navigator.clipboard.writeText('" + image + "')" }
						>
							Copy
						</button>
						<button
							hx-on="click"
							hx-delete={ "/recipe/image/" + image }
							_="on click remove me.parentElement"
						>
							<img
								class="mx-auto"
								width="20"
								height="20"
								src="/assets/cross.svg"
							/>
						</button>
					</div>
				}
			</div>
			// TODO: this button only works inside the form, figure out how to put it at the botton
			<button
				class="w-full btn mt-5"
				hx-post={ "/recipe/" + props.Recipe.ID + "/edit" }
				hx-include={ "#" + recipeFormID }
				hx-select={ "#" + recipeContainerID + "_inner" }
				hx-target={ "#" + recipeContainerID }
				hx-swap="innerHTML"
			>
				if props.Recipe.ID == "new" {
					Create
				} else {
					Update	
				}
			</button>
		</form>
		<div class="mt-5 mb-5 border-white border-2 "></div>
		@imageForm(imageFormProps{RecipeID: props.Recipe.ID, Images: props.Recipe.Images})
		<br/>
		@htmxSortable()
	</div>
}

type imageFormProps struct {
	RecipeID string
	Images   []string
}

templ imageForm(props imageFormProps) {
	<div id="image_form_div" class="flex flex-col">
		<h3>Image upload</h3>
		<form
			id="image_form"
			hx-encoding="multipart/form-data"
			hx-post="/recipe/image"
			class="flex flex-col"
			hx-swap="outerHTML"
			hx-select="#image_form_div"
			hx-target="#image_form_div"
			_="on htmx:xhr:progress(loaded, total) set load to (loaded/total)*100 if load != Infinity set #progress.value to load"
		>
			<input hidden type="text" name="recipe_id" value={ props.RecipeID }/>
			<br/>
			<input type="file" name="files" multiple required accept="image/*"/>
			<br/>
			<progress
				class="h-4 w-full progress:rounded-lg progress-unfilled:bg-[#F2F2F2] progress-filled:bg-red-600"
				id="progress"
				value="0"
				max="100"
			></progress>
			<br/>
			<div class="flex flex-row">
				<button
					type="submit"
					hx-post="/recipe/image?type=replace"
					class="mr-2 w-full btn bg-red-400 hover:bg-red-500"
					form="image_form"
					_="on htmx:afterRequest send images_update to <body/>"
				>
					Replace pictures
				</button>
				<button
					type="submit"
					hx-post="/recipe/image?type=add"
					class="ml-2 w-full btn bg-red-400 hover:bg-red-500"
					form="image_form"
					_="on htmx:afterRequest send images_update to <body/>"
				>
					Add pictures
				</button>
			</div>
		</form>
	</div>
}

script htmxSortable() {
	htmx.onLoad(function(content) {
		var sortables = content.querySelectorAll(".sortable");
		for (var i = 0; i < sortables.length; i++) {
		  var sortable = sortables[i];
		  var sortableInstance = new Sortable(sortable, {
			  animation: 150,
			  ghostClass: 'blue-background-class',
		  });

		  // Re-enable sorting on the `htmx:afterSwap` event
		  sortable.addEventListener("htmx:afterSwap", function() {
			sortableInstance.option("disabled", false);
		  });
		}
	})
}
