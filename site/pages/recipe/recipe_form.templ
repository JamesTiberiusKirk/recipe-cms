package recipe

import "github.com/JamesTiberiusKirk/recipe-cms/models"
import "github.com/JamesTiberiusKirk/recipe-cms/site/components"
import "fmt"

type recipeFormProps struct {
	Recipe         models.Recipe
	AvailableUnits []models.Unit
}

const (
	recipeFormID = "recipe_form"
)

templ recipeForm(props recipeFormProps) {
	<div
		class="w-full"
	>
		<form
			id={ recipeFormID }
			name="recipe"
			hx-ext="json-enc-nested"
		>
			<div class="flex flex-row space-between justify-between mb-2">
				@components.Input(components.InputProps{
					Value: props.Recipe.Name,
					DisplayName: "Name:",
					Name: []string{"recipe", "name"},
					Type: components.InputTypeText,
				})
				<button
					class="btn mb-1"
					hx-post={ fmt.Sprintf("/recipe/%s", props.Recipe.ID) }
					hx-include="#recipe_form"
					hx-select={ "#" + recipeContainerID + "_inner" }
					hx-target={ "#" + recipeContainerID }
					hx-swap="innerHTML"
					hx-push-url="true"
				>
					DONE
				</button>
			</div>
			@components.Tags(components.TagsProps{
				Tags: props.Recipe.Tags,
				Name: []string{"recipe", "tags"},
			})
			<br/>
			@components.TextArea(components.TextAreaProps{
					ID: "introduction",
					Classes: templ.Classes(""),
					FormID: recipeFormID,
					Value: props.Recipe.Intro,
					Rows: 5,
					DisplayName: "Intro:",
					Name: []string{"recipe", "intro"},
					MarkdownPreview: true,
				})
			<br/>
			<br/>
			@components.TextArea(components.TextAreaProps{
					ID: "description",
					FormID: recipeFormID,
					Value: props.Recipe.Description,
					Rows: 5,
					DisplayName: "Description:",
					Name: []string{"recipe", "description"},
					MarkdownPreview: true,
				})
			<br/>
			<br/>
			<br/>
			<h2>Ingredients:</h2>
			<div id="ingredients">
				for _, ingr := range props.Recipe.Ingredients {
					@components.Ingredient(components.IngredientProps{
							// ID: fmt.Sprintf("ingredient:%d", i),
							Ingredient: ingr,
							AvailableUnits: props.AvailableUnits,
							FormName: []string{"recipe", "ingredients", ""},
						})
				}
			</div>
			<br/>
			<button
				hx-get="/recipe/ingredient"
				hx-swap="beforeend"
				hx-target="#ingredients"
				hx-select="#ingredient"
				class="w-full btn bg-red-400 hover:bg-red-500"
			>
				Add ingredient
			</button>
			<br/>
			<br/>
			<br/>
			<h2>Seasonings:</h2>
			<div id="seasonings">
				for _, ingr := range props.Recipe.Seasonings {
					@components.Ingredient(components.IngredientProps{
							//ID: fmt.Sprintf("seasoning:%d",i),
							Ingredient: ingr,
							AvailableUnits: props.AvailableUnits,
							FormName: []string{"recipe", "seasonings", ""},
						})
				}
			</div>
			<br/>
			<button
				hx-get="/recipe/ingredient?type=seasoning"
				hx-swap="beforeend"
				hx-target="#seasonings"
				hx-select="#seasoning"
				class="w-full btn bg-red-400 hover:bg-red-500"
			>
				Add Seasoning 
			</button>
			<br/>
			<br/>
			@components.TextArea(components.TextAreaProps{
					ID: "instructions",
					Value: props.Recipe.Instructions ,
					Rows: 10,
					DisplayName: "Instructions:",
					Name: []string{"recipe", "instructions"},
					MarkdownPreview: true,
				})
			<br/>
			@components.TextArea(components.TextAreaProps{
					ID: "closing",
					FormID: recipeFormID,
					Value: props.Recipe.Closing,
					Rows: 5,
					DisplayName: "Closing thoughts:",
					Name: []string{"recipe", "closing"},
					MarkdownPreview: true,
				})
			<br/>
			<button
				id="submit-all"
				class="w-full btn"
				hx-post={ fmt.Sprintf("/recipe/%s?edit=true", props.Recipe.ID) }
				hx-include={ "#" + recipeFormID }
				hx-select={ "#" + recipeContainerID + "_inner" }
				hx-target={ "#" + recipeContainerID }
				hx-swap="innerHTML"
			>
				Update	
			</button>
		</form>
	</div>
}
