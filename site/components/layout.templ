package components

import "github.com/JamesTiberiusKirk/recipe-cms/common"
import "github.com/JamesTiberiusKirk/recipe-cms/site/session"

func navBar(c *common.Context) templ.Component {
	if c == nil {
		return navBarTempl(false, "")
	}

	sess, ok := c.Get("session").(*session.Manager)
	if !ok {
		return navBarTempl(false, "")
	}

	user, err := sess.GetUser(c)
	if err != nil {
		return navBarTempl(false, "")
	}

	if user == "" {
		return navBarTempl(false, "")
	}

	return navBarTempl(true, user)
}

templ navBarTempl(loggedIn bool, user string) {
	<div class="w-full md:max-w-3xl mx-auto">
		<header class="w-full">
			<div class="flex p-2 justify-evenly">
				<a class="p-6" href="/">Home</a>
				<a class="p-6" href="/recipes">Recipes</a>
				if loggedIn {
					<a class="p-6" href="/recipe/new?edit=true">Add Recipe</a>
					<a class="p-6" href="/auth/logout">Logout</a>
					<span class="p-6 text-sm">USER: { user }</span>
				} else {
					<a class="p-6" href="/auth/login">Login</a>
				}
			</div>
		</header>
	</div>
}

script onLoad() {
	// htmx.logAll();

	htmx.config.defaultSettleDelay = 0;
	//document.addEventListener('htmx:afterRequest', function (event) {
	// console.log(event)
	//})
	document.addEventListener('htmx:beforeOnLoad', function (event) {
			// console.log("htmx:beforeOnLoad CUSTOM", event)

			const res = event.detail.xhr
			const isValidationRoute = (event.detail.requestConfig.path.search("validate"))

			if (isValidationRoute) {
				if (res.status === 400) {
					// console.log("status === 400")
					event.detail.shouldSwap = true;
					event.detail.isError = false;
				}

				if (res.status === 200) {
					// console.log("status === 200")
				}
			}

			// Bellow is an example of creating your own custom attibutes
			// In this example I have created attibutes which dynamically enables or disables (buttons) when using validation routes
			// This same could be expanded for a lot of other behaviour
			// However, this should not be overused as it could already be covered in htmx
			// AND because too much js here will just render the whole point of htmx nil
			if (isValidationRoute) {
				if (res.status === 400) {
					const disableOnErrorTargetId = event.srcElement.getAttribute("disableOnError")
					if (disableOnErrorTargetId) {
						const targetIdParsed = disableOnErrorTargetId.replace("#", "")
							const target = document.getElementById(targetIdParsed)
							if (target) target.setAttribute("disabled", true)
					}
				}

				if (res.status === 200) {
				const enableOnValidTargetId = event.srcElement.getAttribute("enableOnValid")
					if (enableOnValidTargetId) {
						const targetIdParsed = enableOnValidTargetId.replace("#", "")
						const target = document.getElementById(targetIdParsed)
						if (target) target.removeAttribute("disabled")
					}
				}
			}
	});

	htmx.defineExtension('markdown-preview', {
		onEvent: function (name, evt) {
			if (name === "htmx:configRequest"){
				console.log("markdown configRequest",evt)
				evt.detail.headers['Content-Type'] = "text/plain";
			}
		},
		encodeParameters : function(xhr, parameters, elt) {
			console.log("markdown elt.value:", elt.value)
			if (elt.tagName !== "FORM"){
				xhr.overrideMimeType('text/plain');
				return encodeURIComponent(elt.value)
			}
		}
	});

	htmx.defineExtension('json-enc-nested', {
		onEvent: function (name, evt) {
			if (name === "htmx:configRequest" &&
				(evt.srcElement.tagName === "FORM" ||
				 evt.srcElement.form != undefined) ) {
				console.log("json-enc-nested:",evt)
				evt.detail.headers['Content-Type'] = "application/json";
			}
		},
		encodeParameters : function(xhr, parameters, elt) {
			console.log("json-enc-nested elt:")
			console.dir(elt)

			if (elt.form === undefined) return

			let jsonEnc = $(elt.form).serializeJSON()
			console.log("json-enc-nested",jsonEnc)

			xhr.overrideMimeType('application/json');
			return JSON.stringify(jsonEnc);
		}
	});

	// NOTE: not actually intended to have multiple at once 
	// Might need to completly set the toast from js if i want it to work like a stack 
	const toaster = (e) => {showToast(e.type, e.detail.value)} 
	htmx.on("toast_danger", toaster)
	htmx.on("toast_warning", toaster)
	htmx.on("toast_success", toaster)
	htmx.on("toast_info", toaster)

        function showToast(type, message) {
		el = document.getElementById(type)
		document.getElementById(type+"_text").innerHTML = message
		el.classList.remove("hidden");
		setTimeout(function () {
			el.classList.add("hidden");
			document.getElementById(type+"-text").innerHTML = ""
		}, 5000);
        }
}

script dismissToast(id string) {
	document.getElementById(id).classList.add("hidden");
	document.getElementById(id+"_text").innerHTML = "";
}

templ toasts() {
	<div
		id="toast_danger"
		class="hidden z-10 absolute bottom-0 left-1/2 -translate-x-1/2 my-auto"
	>
		<div class="mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
			<span id="toast_danger_text" class="block sm:inline pr-6"></span>
			<span onclick={ dismissToast("toast-danger") } class="absolute top-0 bottom-0 right-0 px-4 py-3">
				<svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
					<title>Close</title>
					<path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"></path>
				</svg>
			</span>
		</div>
	</div>
	<div
		id="toast_warning"
		class="hidden z-10 absolute bottom-0 left-1/2 -translate-x-1/2 my-auto"
	>
		<div class="mb-4 bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative" role="alert">
			<span id="toast_warning_text" class="block sm:inline pr-6"></span>
			<span onclick={ dismissToast("toast-warning") } class="absolute top-0 bottom-0 right-0 px-4 py-3">
				<svg class="fill-current h-6 w-6 text-yellow-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
					<title>Close</title>
					<path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"></path>
				</svg>
			</span>
		</div>
	</div>
	<div
		id="toast_success"
		class="hidden z-10 absolute bottom-0 left-1/2 -translate-x-1/2 my-auto"
	>
		<div class="mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
			<span id="toast_success_text" class="block sm:inline pr-6"></span>
			<span onclick={ dismissToast("toast-success") } class="absolute top-0 bottom-0 right-0 px-4 py-3">
				<svg class="fill-current h-6 w-6 text-green-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
					<title>Close</title>
					<path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"></path>
				</svg>
			</span>
		</div>
	</div>
	<div
		id="toast_info"
		class="hidden z-10 absolute bottom-0 left-1/2 -translate-x-1/2 my-auto"
	>
		<div class="mb-4 bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative" role="alert">
			<span id="toast_info_text" class="block sm:inline pr-6"></span>
			<span onclick={ dismissToast("toast-info") } class="absolute top-0 bottom-0 right-0 px-4 py-3">
				<svg class="fill-current h-6 w-6 text-blue-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
					<title>Close</title>
					<path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"></path>
				</svg>
			</span>
		</div>
	</div>
}

templ Layout(c *common.Context) {
	<html class="dark">
		<head>
			// NOTE: without this chrome media queries are broken lol
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link rel="stylesheet" href="/assets/styles.css"/>
			<link rel="stylesheet" href="/assets/tailwind.css"/>
		</head>
		<body class="dark:bg-gray-800 dark:text-white" onload={ onLoad() }>
			<script src="/assets/htmx.org@1.9.6"></script>
			<script src="/assets/hyperscript.org@0.9.12"></script>
			<script src="/assets/loading-states.js"></script>
			<script src="/assets/json-enc.js"></script>
			<script src="/assets/jquery-3.7.1.min.js"></script>
			<script src="/assets/serializeForm.js"></script>
			<script src="/assets/Sortable.js"></script>
			<script src="/assets/sse.js"></script>
			<div class="w-full">
				@navBar(c)
			</div>
			<div class="mx-auto w-full px-4 md:max-w-3xl ">
				{ children... }
			</div>
			@toasts()
		</body>
	</html>
}
